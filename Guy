import './App.css';
import UserStore from './stores/userstore';
import React from 'react';
import LoginForm  from './LoginFrom';
import SubmitButton from './SubmitButton';
import userstore from './stores/userstore';
import{ observer} from 'mobx-react'

class App extends React.Component {

async componentDidMount() {

    try{
      let res = await fetch('/isLoggedIn' , {
          method: 'post',
          Headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
         }
      });

      let result = await res.json();

      if (result && result.success){
        UserStore.loading = false;
        UserStore.isLoggedIn = true;
        UserStore.username = result.username;
      }
      else{
        UserStore.loading = false;
        UserStore.isLoggedIn = false;
      }
    }
    catch(e){
        UserStore.loading = false;
        UserStore.isLoggedIn = false;

    }
}

async doLogout() {

  try{
    let res = await fetch('/logout' , {
        method: 'post',
        Headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json'
       }
    });

    let result = await res.json();

    if (result && result.success){
      UserStore.isLoggedIn = false;
      UserStore.username = '';
    }

  }
  catch(e){
      console.log(e)

  }
}
render(){
  if(UserStore.loading){
    return (
      <div className="app">
        <div className='container'>
            Loading , please wait..
        </div>
      </div>
    );
  }
  else{
    if (UserStore.isLoggedIn){
      return(
        <div className="app">
          <div className='container'>
            Welcome{UserStore.username}
            <SubmitButton>
                text={'log out'}
                disabled ={false}
                onClick={() => this.doLogout()}
                </SubmitButton>
          </div>
        </div>
      )
    }


  };

      return (
        <div className="app">
          <div className='container'>
            <LoginForm />
          </div>
        </div>
       );
  }
}
export default observer(App);
